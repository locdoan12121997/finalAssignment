package finalAssignment.view;

import com.fasterxml.classmate.AnnotationOverrides;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import finalAssignment.control.StudentManager;
import finalAssignment.model.Student;
import finalAssignment.model.StudentDao;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class UpdateStudentGui extends BaseView {
    private JTextField studentIdTextField;
    private JLabel studentIdLabel;
    private JLabel nameLabel;
    private JTextField nameTextField;
    private JTextField birthdayTextField;
    private JLabel birthdayLabel;
    private JLabel emailLabel;
    private JTextField emailTextField;
    private JTextField phoneTextField;
    private JLabel phoneLabel;
    private JTextField addressTextField;
    private JLabel addressLabel;
    private JLabel batchLabel;
    private JTextField batchTextField;
    private JButton updateButton;
    private JPanel mainPanel;

    public UpdateStudentGui() {
        updateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame currentFrame = BaseView.getCurrentFrame();

                StudentDao studentDao = new StudentDao();
                Student student = studentDao.find(studentIdTextField.getText());
                student.setName(nameTextField.getText());
                student.setDob(birthdayTextField.getText());
                student.setEmail(emailTextField.getText());
                student.setPhone(phoneTextField.getText());
                student.setAddress(addressTextField.getText());
                student.setBatch(batchTextField.getText());

                StudentManager studentManager = new StudentManager();
                studentManager.update_student(student);

                currentFrame.getContentPane().removeAll();
                StudentManageGui studentManageGui = new StudentManageGui();
                currentFrame.setContentPane(studentManageGui.getMainPanel());
                JOptionPane.showMessageDialog(null, "Info updated");
                currentFrame.setVisible(true);
            }
        });
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public void fillInformationIntoTextfield(Student student) {
        studentIdTextField.setText(student.getStudentId());
        nameTextField.setText(student.getName());
        birthdayTextField.setText(student.getDob());
        emailTextField.setText(student.getEmail());
        phoneTextField.setText(student.getPhone());
        addressTextField.setText(student.getAddress());
        batchTextField.setText(student.getBatch());
        studentIdTextField.setEditable(false);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(8, 2, new Insets(0, 0, 0, 0), -1, -1));
        studentIdLabel = new JLabel();
        studentIdLabel.setText("Student id");
        mainPanel.add(studentIdLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        studentIdTextField = new JTextField();
        studentIdTextField.setText("");
        mainPanel.add(studentIdTextField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        nameLabel = new JLabel();
        nameLabel.setText("Name");
        mainPanel.add(nameLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nameTextField = new JTextField();
        nameTextField.setText("");
        mainPanel.add(nameTextField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        birthdayLabel = new JLabel();
        birthdayLabel.setText("Birthday");
        mainPanel.add(birthdayLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        birthdayTextField = new JTextField();
        birthdayTextField.setText("");
        mainPanel.add(birthdayTextField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        emailLabel = new JLabel();
        emailLabel.setText("Email");
        mainPanel.add(emailLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        emailTextField = new JTextField();
        emailTextField.setText("");
        mainPanel.add(emailTextField, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        phoneLabel = new JLabel();
        phoneLabel.setText("Phone");
        mainPanel.add(phoneLabel, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        phoneTextField = new JTextField();
        phoneTextField.setText("");
        mainPanel.add(phoneTextField, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        addressLabel = new JLabel();
        addressLabel.setText("Address");
        mainPanel.add(addressLabel, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addressTextField = new JTextField();
        addressTextField.setText("");
        mainPanel.add(addressTextField, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        batchLabel = new JLabel();
        batchLabel.setText("Batch");
        mainPanel.add(batchLabel, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        batchTextField = new JTextField();
        batchTextField.setText("");
        mainPanel.add(batchTextField, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        updateButton = new JButton();
        updateButton.setText("Update");
        mainPanel.add(updateButton, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
